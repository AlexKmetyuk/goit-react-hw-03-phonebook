{"version":3,"sources":["components/phonebook/PhonebookForm.jsx","components/phonebook/PhonebookList.jsx","components/phonebook/Filter.jsx","App.js","index.js"],"names":["PhonebookForm","state","id","uuidv4","name","number","handleChange","event","currentTarget","value","setState","handleSubmit","preventDefault","props","check","onSubmit","reset","checkContact","className","this","type","pattern","title","required","onChange","Component","PhonebookList","contacts","onRemove","listItems","map","contact","onClick","Filter","App","filter","createContact","prevState","handleCheckUniqueContact","find","alert","handleRemoveContact","changeFilter","e","normalizedContactNames","toLocaleLowerCase","visibleContacts","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wQAoEeA,E,4MA7DXC,MAAQ,CACJC,GAAIC,cACJC,KAAM,GACNC,OAAQ,I,EAGZC,aAAe,SAAAC,GAAU,IAAD,EACEA,EAAMC,cAArBJ,EADa,EACbA,KAAMK,EADO,EACPA,MACb,EAAKC,SAAL,eACKN,EAAQK,K,EAIjBE,aAAe,SAAAJ,GACXA,EAAMK,iBACF,EAAKC,MAAMC,MAAM,EAAKb,MAAMG,OAI5B,EAAKS,MAAME,SAAS,EAAKd,OAHzB,EAAKe,S,EAObA,MAAQ,WACJ,EAAKN,SAAS,CAACR,GAAIC,cAAUC,KAAO,GAAIC,OAAQ,M,EAGpDY,aAAe,a,4CAKf,WACI,OAAO,uBAAMC,UAAW,OAAQH,SAAUI,KAAKR,aAAxC,UACH,yCACI,uBACIS,KAAK,OACLhB,KAAK,OACLiB,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRd,MAAOU,KAAKlB,MAAMG,KAClBoB,SAAUL,KAAKb,kBAGvB,2CACI,uBACIc,KAAK,MACLhB,KAAK,SACLiB,QAAQ,+FACRC,MAAM,mlBACNC,UAAQ,EACRd,MAAOU,KAAKlB,MAAMI,OAClBmB,SAAUL,KAAKb,kBAGvB,wBAAQc,KAAK,SAAb,gC,GAzDgBK,aCLb,SAASC,EAAT,GAA6C,IAArBC,EAAoB,EAApBA,SAAUC,EAAU,EAAVA,SAE3CC,EAAWF,EAASG,KAAI,SAAAC,GAAO,OACjC,mCAAuB,qDAAcA,EAAQ3B,KAAtB,KAA8B2B,EAAQ1B,UAA7D,IAAyE,wBAAQ2B,QAAS,WAAOJ,EAASG,EAAQ7B,KAAzC,sBAAhE6B,EAAQ7B,OAGjB,OACI,6BAAK2B,ICPb,IAOeI,EAPA,SAAC,GAAD,IAAGxB,EAAH,EAAGA,MAAOe,EAAV,EAAUA,SAAV,OACX,wBAAON,UAAW,OAAlB,kCAEI,uBAAOT,MAAOA,EAAOe,SAAUA,QC0DxBU,G,kNApDbjC,MAAQ,CACN0B,SAAU,GACVQ,OAAQ,I,EAGVC,cAAgB,SAAAL,GACd,EAAKrB,UAAS,SAAA2B,GAAS,MAAK,CAC1BV,SAAS,GAAD,mBAAMU,EAAUV,UAAhB,CAA0BI,S,EAItCO,yBAA2B,SAAAlC,GAAS,IAE5BU,EADe,EAAKb,MAAlB0B,SACeY,MAAK,SAAAR,GAC1B,OAAOA,EAAQ3B,OAASA,KAE1B,GAAIU,EAEF,OADA0B,MAAM,4BACC1B,G,EAIX2B,oBAAsB,SAAAvC,GACpB,EAAKQ,UAAS,SAAA2B,GAAS,MAAK,CAC1BV,SAAUU,EAAUV,SAASQ,QAAO,SAAAJ,GAAO,OAAIA,EAAQ7B,KAAOA,U,EAIlEwC,aAAe,SAAAC,GACb,EAAKjC,SAAS,CAAEyB,OAAQQ,EAAEnC,cAAcC,S,4CAG1C,WAAS,IAAD,EACqBU,KAAKlB,MAAzB0B,EADD,EACCA,SAAUQ,EADX,EACWA,OAEXS,EAAyBT,EAAOU,oBAEhCC,EAAkBnB,EAASQ,QAAO,SAAAJ,GAAO,OAC7CA,EAAQ3B,KAAKyC,oBAAoBE,SAASH,MAE9C,OACE,sBAAK1B,UAAW,MAAhB,UACE,2CACA,cAAC,EAAD,CAAeS,SAAUA,EAAUb,MAAOK,KAAKmB,yBAA0BvB,SAAUI,KAAKiB,gBACxF,0CACA,cAAC,EAAD,CAAQ3B,MAAO0B,EAAQX,SAAUL,KAAKuB,eACtC,cAAChB,EAAD,CAAeC,SAAUmB,EAAiBlB,SAAUT,KAAKsB,6B,GAhD7ChB,cCJlBuB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.92bcaa48.chunk.js","sourcesContent":["\nimport { Component } from \"react\";\nimport { v4 as uuidv4 } from 'uuid';\n\n\n\nclass PhonebookForm extends Component{\n    state = {\n        id: uuidv4(),\n        name: '',\n        number: ''\n      }\n\n    handleChange = event => {\n        const {name, value} = event.currentTarget\n        this.setState({\n            [name] : value\n        })\n    }\n\n    handleSubmit = event => {\n        event.preventDefault()\n        if (this.props.check(this.state.name)) {\n            this.reset();\n            return;\n        }\n            this.props.onSubmit(this.state);\n            this.reset();\n    }\n\n    reset = () => {\n        this.setState({id: uuidv4(), name : '', number: ''})\n    }\n\n    checkContact = () => {\n        \n    }\n\n\n    render(){\n        return(<form className={'form'} onSubmit={this.handleSubmit}>\n            <label>Name\n                <input\n                    type=\"text\"\n                    name=\"name\"\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                    required\n                    value={this.state.name}\n                    onChange={this.handleChange}\n                    />\n            </label>\n            <label>Number\n                <input\n                    type=\"tel\"\n                    name=\"number\"\n                    pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n                    title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\n                    required\n                    value={this.state.number}\n                    onChange={this.handleChange}\n                    />\n            </label>\n            <button type=\"submit\">Add contact</button>\n        </form>)\n    }\n}\n\nexport default PhonebookForm\n","\nexport default function PhonebookList({contacts, onRemove}){\n\nconst listItems= contacts.map(contact => \n    <li key={contact.id} > <p>    📱    {contact.name}: {contact.number}</p> <button onClick={() => {onRemove(contact.id)}}>Remove</button></li>\n    )\n\n    return(\n        <ul>{listItems}</ul>\n    )\n    }","\nconst Filter = ( {value, onChange} ) => (\n    <label className={'form'}>Find contacts by name\n\n        <input value={value} onChange={onChange}/>\n    </label>\n)\n\nexport default Filter","import { Component } from 'react';\nimport PhonebookForm from './components/phonebook/PhonebookForm'\nimport PhonebookList from './components/phonebook/PhonebookList'\nimport Filter from './components/phonebook/Filter'\nimport './styles.css'\n\n\n\nclass App extends Component {\n\n  state = {\n    contacts: [],\n    filter: ''\n  }\n\n  createContact = contact => {\n    this.setState(prevState => ({\n      contacts: [...prevState.contacts, contact]\n    }))\n  }\n\n  handleCheckUniqueContact = name => {\n    const { contacts } = this.state;\n    const check = contacts.find(contact => {\n      return contact.name === name;\n    });\n    if (check) {\n      alert('Contact is already exist');\n      return check;\n    }\n  };\n\n  handleRemoveContact = id => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== id),\n    }));\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value })\n  }\n\n  render(){\n    const {contacts, filter} = this.state\n\n    const normalizedContactNames = filter.toLocaleLowerCase()\n\n    const visibleContacts = contacts.filter(contact => \n      contact.name.toLocaleLowerCase().includes(normalizedContactNames))\n\n  return (\n    <div className={'app'}>\n      <h1>Phonebook</h1>\n      <PhonebookForm contacts={contacts} check={this.handleCheckUniqueContact} onSubmit={this.createContact}/>\n      <h2>Contacts</h2>\n      <Filter value={filter} onChange={this.changeFilter}/>\n      <PhonebookList contacts={visibleContacts} onRemove={this.handleRemoveContact}/>\n    </div>\n  );}\n  \n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}